/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.9.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '3.3.0'
    id "org.jetbrains.kotlin.jvm" version "1.9.0"
    id "nebula.ospackage" version "9.1.1"
    id "nebula.ospackage-application"  version "9.1.1"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.2"
}


apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.rustyrazorblade'

sourceCompatibility = 11

application {
    applicationName = "cassandra-easy-stress"
    mainClassName = "com.rustyrazorblade.easycassstress.MainKt"
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10"
    implementation group: 'com.beust', name: 'jcommander', version: '1.82'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.3'

    // Java driver v4
    implementation "org.apache.cassandra:java-driver-core:4.19.0"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.4'

    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'

    implementation group: "org.apache.logging.log4j", name: "log4j-api", version: "2.17.1"
    implementation group: "org.apache.logging.log4j", name: "log4j-core", version:"2.17.1"
    implementation 'org.apache.logging.log4j:log4j-api-kotlin:1.2.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j18-impl
    // maps the datastax driver slf4j calls to log4j

    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.18.0'

    // needed for yaml logging configurations

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.4'

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core
    // Newer version to work with Cassandra driver v4
    implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.1.18'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'

    // https://mvnrepository.com/artifact/com.github.ajalt/mordant
    implementation group: 'com.github.ajalt', name: 'mordant', version: '1.1.0'

    implementation 'io.prometheus:simpleclient:0.16.0'
    implementation 'io.prometheus:simpleclient_dropwizard:0.16.0'
    implementation 'io.prometheus:simpleclient_httpserver:0.16.0'

    implementation group: 'me.tongfei', name: 'progressbar', version: '0.7.2'

    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.hdrhistogram:HdrHistogram:2.1.12'

    implementation("org.agrona:agrona:1.22.0") // can't use the 2.x or 1.23+ line as it requires JDK 17

    // for Parquet support
    implementation("org.apache.parquet:parquet-hadoop:1.15.2")
    implementation 'org.apache.hadoop:hadoop-common:3.4.1'
    implementation 'org.apache.hadoop:hadoop-mapreduce-client-common:3.4.1'

    // exporting dropwizard metrics

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.9.1'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.4.0'

    testImplementation 'io.mockk:mockk:1.12.7'

}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
}

test {
    useJUnitPlatform()
}

task docs(type:Exec) {
    dependsOn("shadowJar")
    dependsOn("generateExamples")

    environment "CASSANDRA_EASY_STRESS_VERSION", "${version}"
    commandLine 'docker-compose', 'up', 'docs'
    group = "Documentation"
    description = "Build website documentation"
}

task generateExamples(type: Exec) {
    dependsOn("shadowJar")
    commandLine "manual/generate_examples.sh"
    group = "Documentation"
    description = "Generate examples for documentation"
}

jib {
    to {
        image = "rustyrazorblade/cassandra-easy-stress"
        tags = [version, "latest"]
    }
}

ospackage {
    os = LINUX
    link("/usr/local/bin/cassandra-easy-stress", "/opt/cassandra-easy-stress/bin/cassandra-easy-stress" )
    packager "Jon Haddad"
    maintainer "Jon Haddad"
    vendor "Rustyrazorblade Consulting"
    url "http://rustyrazorblade.com/cassandra-easy-stress/"
    license "Apache License 2.0"
    description "Stress Tool for Apache Cassandra by Rustyrazorblade Consulting"
}

buildDeb {
    distribution "weezy,bionic,xenial,jessie"
    requires("openjdk-8-jre")
    group = "build"
}

buildRpm {
    requires("java-1.8.0-openjdk")
    user "root"
    group = "build"
}

task buildAll {
    group = "build"
    dependsOn "buildDeb"
    dependsOn "buildRpm"
    dependsOn "distTar"
}

tasks.distTar {
    compression = Compression.GZIP
    archiveExtension.set("tar.gz")
}

assemble.mustRunAfter clean

applicationDistribution.from("LICENSE.txt") {
    into ""
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
targetCompatibility = JavaVersion.VERSION_11
